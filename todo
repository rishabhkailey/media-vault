migration scripts

template repo (refer https://github.com/KyberNetwork/go-project-template and https://github.com/kalifun/gin-template/)

go through uber's go guide

https://google.github.io/styleguide/go/index

https://exceptionnotfound.net/the-repository-service-pattern-with-dependency-injection-and-asp-net-core/


https://github.com/zalando/gin-oauth2
https://pkg.go.dev/github.com/go-oauth2/gin-server#section-readme


"go.uber.org/atomic"

will dependency injecting will solve passing sql connection as param problem?

api models
db models
db crud operations (controllers)
api crud operations (handlers?)
session redis storage   

actual auth session which will be used for auth will be in the client app, right?


## Requirements

* admin portal option
* allow sign up option
* allow anonymous option
* ./auth-server [addClient|removeClient|updateClient]
* ./auth-server migrate
* run migration on start **


https://github.com/beego/beego (webframework with logger, orm)

create our own client store using go orm https://github.com/techknowlogick/go-oauth2-gorm

https://github.com/zitadel/oidc

consent screen?

oauth2 (only for authorization)
user -> client -> oauth server
after auth
user -> client -> resource server

oidc(authentication)
it just verifies the user and its scope


https://www.youtube.com/watch?v=M4JIvUIE17c&ab_channel=Auth0
https://www.youtube.com/watch?v=8aCyojTIW6U&ab_channel=OktaDev

https://darutk.medium.com/full-scratch-implementor-of-oauth-and-openid-connect-talks-about-findings-55015f36d1c3


https://oauth.tools/

claims
* info asked by client, e.g. email, email_verified
* scopes group of claims, profile scope = claim(email, name)

todo - gracefuly handle state mismatch? or whatever happen if we restart server after client request was redirected to server


flow how will resource server verify the ownership
1.
    * oauth will only do the authn and authz
    * resource server will have to maintain the resource and resource owners
    * default user scope (no scope)
    * how we will assign scopes to user?

Curls to generate token


Requirements
* oauth will only do the authn and authz
* default scope support (need to update cli as well to accept default scope)
* admin portal(per client) should it be in client or auth server? should be in client
* api for client to assign user scopes 
* api for client to create new users with temp password



client [create|delete|update] --id --secret
user [create|delete|update] --name --email (we will generate random temporary password)
userScopeBinding [create|delete|update] --email --scope --clientId

next 
* oauth claims in jwt token (do we need it, we can get the claims/token info from bearer token itself tokenInfo, err = server.ValidationBearerToken(r *http.request))
* id_token not working (it is working but go-client struct used doesn't have id_token field)
* oidc implementation
    * token interospect endpoint
    * well-known endpoint
* store access and id token in user session? it should be done by client, right?
* claims implementation (not doing right now)
* group claims like admin, user, anonymous https://developer.okta.com/docs/guides/customize-tokens-groups-claim/main/ it can be a claim like group:user group:admin and in the user info endpoint we should return it somehow like https://www.ibm.com/docs/en/was-liberty/base?topic=liberty-invoking-userinfo-endpoint-openid-connect#:~:text=%22groupIds%22%20%20%20%20%20%3A%20%5B%20%22bobsdepartment%22%2C%22administrators%22%20%5D%2C or even something simple like user_group: true
* admin portal
* token refresh

oauth server config
    check server.ValidationTokenRequest
        Config.AllowGetAccessRequest may affect client_secret_basic
    server.PasswordAuthorizationHandler for password grant

csrf(state) and replay attacks(nonce)

https://blog.alexellis.io/golang-e2e-testing-case-study/ https://www.gojek.io/blog/golang-integration-testing-made-easy
https://threedots.tech/post/repository-pattern-in-go/
https://github.com/irahardianto/service-pattern-go

try integration test for a flow

cmd , separated values not working

f integration tests lets go with unit tests for now

some standard for response

for dev env all the api's through vue proxy?


Dev env setup doc


Redirect issues

* if return redirect from server client http library follows the redirect
* instead of using fetch or axios we will need to use form post(user experience will not be good)

* if we return data then client http library cannot redirect with post request
* we need to handle it in 2 post requests that client will be send /login (if consent not required) or /authorize
* issue is post authorize will return a redirect response
* https://www.w3schools.com/howto/howto_js_redirect_webpage.asp

lets try
* login we will handle the redirect
* after login we will do get redirect
* allow we will do post form submit


session not persisted
directly openning auth server login causes error


without consent if we go to authorize endpoint it works
on /postoauth we should redirect to error page and not return json {
"message": "request failed due to server side error"
}

any endpoint on which redirect is happening should only redirect and not return json

show error on directly opening login page?

do we need data column in client table

1. get oauth
2. /login
3. post oauth

user -> 1 -> 2 -> 3 correct
user -> 2 (redirect to accounts page or error page)
user -> 3 (redirect to error page)

create errors package with error staus code, message similar to oauth errors > response.go

todo consent only for oidc scopes??